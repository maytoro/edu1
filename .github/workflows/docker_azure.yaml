name: Publish Docker Azure image

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Docker TAG"
        required: true
        default: "v1"

jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      ACR: acr0323.azurecr.io                # 절대 https:// 붙이지 말 것
      IMAGE_PATH: maytoro/edu1               # ACR 리포지토리
      TAG: ${{ github.event.inputs.name }}   # 예: v3
    steps:
      - uses: actions/checkout@v4

      # 0) 필수 값 검증(비어 있으면 fail)
      - name: Validate required env
        run: |
          test -n "${ACR}" || (echo "ACR missing" && exit 1)
          test -n "${IMAGE_PATH}" || (echo "IMAGE_PATH missing" && exit 1)
          test -n "${TAG}" || (echo "TAG missing" && exit 1)

      # 1) ACR 로그인 (Admin user를 쓰는 현재 방식)
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 2) Buildx
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # 3) Build & Push (풀 경로를 직접 명시)
      - name: Build and Push
        id: buildpush
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.ACR }}/${{ env.IMAGE_PATH }}:${{ env.TAG }}
            ${{ env.ACR }}/${{ env.IMAGE_PATH }}:latest
          platforms: linux/amd64

      # 4) Digest 읽기
      - name: Read pushed digest
        id: digest
        run: |
          echo "digest=${{ steps.buildpush.outputs.digest }}" >> $GITHUB_OUTPUT
          echo "Pushed digest: ${{ steps.buildpush.outputs.digest }}"

      # 5) 매니페스트의 image를 digest로 치환해 커밋
      - name: Update manifest to digest
        run: |
          FILE="k8s/deployment.yaml"
          REPO="${{ env.ACR }}/${{ env.IMAGE_PATH }}"
          DIGEST="${{ steps.digest.outputs.digest }}"
          # image: acr0323.azurecr.io/maytoro/edu1:...  ->  image: acr0323.azurecr.io/maytoro/edu1@sha256:...
          sed -i "s#^\(\s*image:\s*\)${REPO}:.*#\1${REPO}@${DIGEST}#g" "$FILE"
          echo "After update:"
          grep -n "image:" "$FILE"
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$FILE"
          git commit -m "deploy: ${REPO}@${DIGEST}"
          git push
